{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { hasOwnProperty } from '@react-native-firebase/app/lib/common';\nvar MAP = {\n  nan: 0,\n  '-infinity': 1,\n  infinity: 2,\n  null: 3,\n  documentid: 4,\n  booleanTrue: 5,\n  booleanFalse: 6,\n  double: 7,\n  string: 8,\n  stringEmpty: 9,\n  array: 10,\n  reference: 11,\n  geopoint: 12,\n  timestamp: 13,\n  blob: 14,\n  fieldvalue: 15,\n  object: 16,\n  integer: 17,\n  negativeZero: 18,\n  unknown: -999\n};\nvar MAP_ENTRIES = Object.entries(MAP);\nexport function getTypeMapInt(type) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n  if (hasOwnProperty(MAP, type)) {\n    var array = [MAP[type]];\n\n    if (value !== undefined) {\n      array.push(value);\n    }\n\n    return array;\n  }\n\n  return null;\n}\nexport function getTypeMapName(value) {\n  for (var i = 0; i < MAP_ENTRIES.length; i++) {\n    var _MAP_ENTRIES$i = _slicedToArray(MAP_ENTRIES[i], 2),\n        name = _MAP_ENTRIES$i[0],\n        int = _MAP_ENTRIES$i[1];\n\n    if (value === int) {\n      return name;\n    }\n  }\n\n  return null;\n}","map":{"version":3,"names":["hasOwnProperty","MAP","nan","infinity","null","documentid","booleanTrue","booleanFalse","double","string","stringEmpty","array","reference","geopoint","timestamp","blob","fieldvalue","object","integer","negativeZero","unknown","MAP_ENTRIES","Object","entries","getTypeMapInt","type","value","undefined","push","getTypeMapName","i","length","name","int"],"sources":["/Users/denisaolimpia/Desktop/E-H-eroes-/mobile-app/node_modules/@react-native-firebase/firestore/lib/utils/typemap.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { hasOwnProperty } from '@react-native-firebase/app/lib/common';\n\nconst MAP = {\n  nan: 0,\n  '-infinity': 1,\n  infinity: 2,\n  null: 3,\n  documentid: 4, // to native only\n  booleanTrue: 5,\n  booleanFalse: 6,\n  double: 7,\n  string: 8,\n  stringEmpty: 9,\n  array: 10,\n  reference: 11,\n  geopoint: 12,\n  timestamp: 13,\n  blob: 14,\n  fieldvalue: 15,\n  object: 16,\n  integer: 17,\n  negativeZero: 18,\n  unknown: -999,\n};\n\nconst MAP_ENTRIES = Object.entries(MAP);\n\n/**\n * Returns the array map with value for a given type\n * @param type\n * @param value\n * @returns {null|*[]}\n */\nexport function getTypeMapInt(type, value = undefined) {\n  if (hasOwnProperty(MAP, type)) {\n    const array = [MAP[type]];\n    if (value !== undefined) {\n      array.push(value);\n    }\n    return array;\n  }\n\n  return null;\n}\n\n/**\n * Returns the type of a given int value\n * @param value\n * @returns {null}\n */\nexport function getTypeMapName(value) {\n  for (let i = 0; i < MAP_ENTRIES.length; i++) {\n    const [name, int] = MAP_ENTRIES[i];\n    if (value === int) {\n      return name;\n    }\n  }\n\n  return null;\n}\n"],"mappings":";AAiBA,SAASA,cAAT,QAA+B,uCAA/B;AAEA,IAAMC,GAAG,GAAG;EACVC,GAAG,EAAE,CADK;EAEV,aAAa,CAFH;EAGVC,QAAQ,EAAE,CAHA;EAIVC,IAAI,EAAE,CAJI;EAKVC,UAAU,EAAE,CALF;EAMVC,WAAW,EAAE,CANH;EAOVC,YAAY,EAAE,CAPJ;EAQVC,MAAM,EAAE,CARE;EASVC,MAAM,EAAE,CATE;EAUVC,WAAW,EAAE,CAVH;EAWVC,KAAK,EAAE,EAXG;EAYVC,SAAS,EAAE,EAZD;EAaVC,QAAQ,EAAE,EAbA;EAcVC,SAAS,EAAE,EAdD;EAeVC,IAAI,EAAE,EAfI;EAgBVC,UAAU,EAAE,EAhBF;EAiBVC,MAAM,EAAE,EAjBE;EAkBVC,OAAO,EAAE,EAlBC;EAmBVC,YAAY,EAAE,EAnBJ;EAoBVC,OAAO,EAAE,CAAC;AApBA,CAAZ;AAuBA,IAAMC,WAAW,GAAGC,MAAM,CAACC,OAAP,CAAetB,GAAf,CAApB;AAQA,OAAO,SAASuB,aAAT,CAAuBC,IAAvB,EAAgD;EAAA,IAAnBC,KAAmB,uEAAXC,SAAW;;EACrD,IAAI3B,cAAc,CAACC,GAAD,EAAMwB,IAAN,CAAlB,EAA+B;IAC7B,IAAMd,KAAK,GAAG,CAACV,GAAG,CAACwB,IAAD,CAAJ,CAAd;;IACA,IAAIC,KAAK,KAAKC,SAAd,EAAyB;MACvBhB,KAAK,CAACiB,IAAN,CAAWF,KAAX;IACD;;IACD,OAAOf,KAAP;EACD;;EAED,OAAO,IAAP;AACD;AAOD,OAAO,SAASkB,cAAT,CAAwBH,KAAxB,EAA+B;EACpC,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,WAAW,CAACU,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;IAC3C,oCAAoBT,WAAW,CAACS,CAAD,CAA/B;IAAA,IAAOE,IAAP;IAAA,IAAaC,GAAb;;IACA,IAAIP,KAAK,KAAKO,GAAd,EAAmB;MACjB,OAAOD,IAAP;IACD;EACF;;EAED,OAAO,IAAP;AACD"},"metadata":{},"sourceType":"module"}