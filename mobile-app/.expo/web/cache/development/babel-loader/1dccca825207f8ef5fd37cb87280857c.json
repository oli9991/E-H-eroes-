{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport SideMenu from \"./components/Menu\";\nimport AddAnnouncement from \"./pages/AddAnnouncement\";\nimport Announcement from \"./pages/Announcement\";\nimport Announcements from \"./pages/Announcements\";\nimport Donations from \"./pages/Donations\";\nimport HomeScreen from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Appoitment from \"./pages/process/Appoitment\";\nimport Form1 from \"./pages/process/Form1\";\nimport Form2 from \"./pages/process/Form2\";\nimport Form3 from \"./pages/process/Form3\";\nimport Form4 from \"./pages/process/Form4\";\nimport Form5 from \"./pages/process/Form5\";\nimport Form6 from \"./pages/process/Form6\";\nimport Register from \"./pages/Register\";\nimport Start from \"./pages/Start\";\nimport { AuthenticatedUserContext, AuthenticatedUserProvider } from \"./providers\";\nimport * as Notifications from 'expo-notifications';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Constants from 'expo-constants';\nimport { db } from \"./utils/firebase\";\nimport { collection, doc, onSnapshot, query } from 'firebase/firestore/lite';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      appIsReady = _useState2[0],\n      setAppIsReady = _useState2[1];\n\n  var _useContext = useContext(AuthenticatedUserContext),\n      user = _useContext.user;\n\n  var customFonts = {\n    Fraunces_SemiBold: require(\"./assets/fonts/Fraunces-SemiBold.ttf\"),\n    Fraunces_Bold: require(\"./assets/fonts/Fraunces-Bold.ttf\"),\n    Outfit_Regular: require(\"./assets/fonts/Outfit-Regular.ttf\"),\n    Outfit_Medium: require(\"./assets/fonts/Outfit-Medium.ttf\"),\n    Outfit_SemiBold: require(\"./assets/fonts/Outfit-SemiBold.ttf\"),\n    Outfit_Bold: require(\"./assets/fonts/Outfit-Bold.ttf\")\n  };\n  useEffect(function () {\n    function prepare() {\n      return _regeneratorRuntime.async(function prepare$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(SplashScreen.preventAutoHideAsync());\n\n            case 3:\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Font.loadAsync(customFonts));\n\n            case 5:\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(new Promise(function (resolve) {\n                return setTimeout(resolve, 500);\n              }));\n\n            case 7:\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.warn(_context.t0);\n\n            case 12:\n              _context.prev = 12;\n              setAppIsReady(true);\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9, 12, 15]], Promise);\n    }\n\n    prepare();\n  }, [customFonts]);\n  console.ignoreAllLogs = true;\n  Notifications.setNotificationHandler({\n    handleNotification: function handleNotification() {\n      return _regeneratorRuntime.async(function handleNotification$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", {\n                shouldShowAlert: true,\n                shouldPlaySound: true,\n                shouldSetBadge: true\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  });\n\n  function registerForPushNotificationsAsync() {\n    var token, _await$Notifications$, existingStatus, finalStatus, _await$Notifications$2, status;\n\n    return _regeneratorRuntime.async(function registerForPushNotificationsAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!Constants.isDevice) {\n              _context3.next = 22;\n              break;\n            }\n\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(Notifications.getPermissionsAsync());\n\n          case 3:\n            _await$Notifications$ = _context3.sent;\n            existingStatus = _await$Notifications$.status;\n            finalStatus = existingStatus;\n\n            if (!(existingStatus !== 'granted')) {\n              _context3.next = 13;\n              break;\n            }\n\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(Notifications.requestPermissionsAsync());\n\n          case 9:\n            _await$Notifications$2 = _context3.sent;\n            status = _await$Notifications$2.status;\n            finalStatus = status;\n            console.log('existingStatus', existingStatus);\n\n          case 13:\n            if (!(finalStatus !== 'granted')) {\n              _context3.next = 17;\n              break;\n            }\n\n            alert('Failed to get push token for push notification!');\n            console.log('finalStatus', finalStatus);\n            return _context3.abrupt(\"return\");\n\n          case 17:\n            _context3.next = 19;\n            return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n          case 19:\n            token = _context3.sent.data;\n            _context3.next = 23;\n            break;\n\n          case 22:\n            alert('Must use physical device for Push Notifications');\n\n          case 23:\n            return _context3.abrupt(\"return\", token);\n\n          case 24:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  exports.sendPushNotification = function () {\n    var q = query(collection(db, 'cities'));\n    oonSnapshot(q, function (querySnapshot) {\n      var root = event.data.ref.root;\n      var messages = [];\n      return root.child('/users').once('value').then(function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          var expoToken = childSnapshot.val().expoToken;\n          messages.push({\n            to: expoToken,\n            sound: 'default',\n            body: 'New Note Added'\n          });\n        });\n        return Promise.all(messages);\n      }).then(function (messages) {\n        fetch('https://exp.host/--/api/v2/push/send', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(messages)\n        });\n      }).catch(function (reason) {\n        console.log(reason);\n      });\n    });\n  };\n\n  if (!appIsReady) {\n    return null;\n  }\n\n  return _jsx(AuthenticatedUserProvider, {\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        initialRouteName: user ? 'Donations' : 'Donations',\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Announcements\",\n          component: Announcements,\n          options: {\n            title: '',\n            headerStyle: {\n              backgroundColor: '#ffffff',\n              border: 'none'\n            },\n            headerShadowVisible: false,\n            headerBackVisible: false,\n            headerShown: false,\n            exact: true\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"AddAnnouncement\",\n          component: AddAnnouncement,\n          options: {\n            title: '',\n            headerStyle: {\n              backgroundColor: '#ffffff',\n              border: 'none'\n            },\n            headerShadowVisible: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Donations\",\n          component: Donations,\n          options: {\n            title: '',\n            headerStyle: {\n              backgroundColor: '#ffffff',\n              border: 'none'\n            },\n            headerShadowVisible: false,\n            headerBackVisible: false,\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Appointment\",\n          component: Appoitment,\n          options: {\n            title: '',\n            headerStyle: {\n              backgroundColor: '#ffffff',\n              border: 'none'\n            },\n            headerBackVisible: true,\n            headerShadowVisible: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Announcement\",\n          component: Announcement,\n          options: {\n            title: '',\n            headerStyle: {\n              backgroundColor: '#ffffff',\n              border: 'none'\n            },\n            exact: true,\n            headerShadowVisible: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Form1\",\n          component: Form1,\n          options: {\n            title: '',\n            headerStyle: {\n              backgroundColor: '#ffffff',\n              border: 'none'\n            },\n            headerShadowVisible: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Form2\",\n          component: Form2,\n          options: {\n            title: '',\n            headerStyle: {\n              backgroundColor: '#ffffff',\n              border: 'none'\n            },\n            headerShadowVisible: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Form3\",\n          component: Form3,\n          options: {\n            title: '',\n            headerStyle: {\n              backgroundColor: '#ffffff',\n              border: 'none'\n            },\n            headerShadowVisible: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Form4\",\n          component: Form4,\n          options: {\n            title: '',\n            headerStyle: {\n              backgroundColor: '#ffffff',\n              border: 'none'\n            },\n            headerShadowVisible: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Form5\",\n          component: Form5,\n          options: {\n            title: '',\n            headerStyle: {\n              backgroundColor: '#ffffff',\n              border: 'none'\n            },\n            headerShadowVisible: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Form6\",\n          component: Form6,\n          options: {\n            title: '',\n            headerStyle: {\n              backgroundColor: '#ffffff',\n              border: 'none'\n            },\n            headerShadowVisible: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Start\",\n          component: Start,\n          options: {\n            title: '',\n            headerStyle: {\n              backgroundColor: '#ffffff',\n              border: 'none'\n            },\n            headerShadowVisible: false,\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: Register,\n          options: {\n            title: '',\n            headerStyle: {\n              backgroundColor: '#ffffff',\n              border: 'none'\n            },\n            headerShadowVisible: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Login\",\n          component: Login,\n          options: {\n            title: '',\n            headerStyle: {\n              backgroundColor: '#ffffff',\n              border: 'none'\n            },\n            headerShadowVisible: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Menu\",\n          component: SideMenu,\n          options: {\n            title: '',\n            headerStyle: {\n              backgroundColor: '#ffffff',\n              border: 'none'\n            },\n            headerShadowVisible: false,\n            headerBackVisible: false,\n            headerShown: false\n          }\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","Font","SplashScreen","React","useContext","useEffect","useState","useRef","SideMenu","AddAnnouncement","Announcement","Announcements","Donations","HomeScreen","Login","Appoitment","Form1","Form2","Form3","Form4","Form5","Form6","Register","Start","AuthenticatedUserContext","AuthenticatedUserProvider","Notifications","Constants","db","collection","doc","onSnapshot","query","Stack","App","appIsReady","setAppIsReady","user","customFonts","Fraunces_SemiBold","require","Fraunces_Bold","Outfit_Regular","Outfit_Medium","Outfit_SemiBold","Outfit_Bold","prepare","preventAutoHideAsync","loadAsync","Promise","resolve","setTimeout","console","warn","ignoreAllLogs","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","registerForPushNotificationsAsync","isDevice","getPermissionsAsync","existingStatus","status","finalStatus","requestPermissionsAsync","log","alert","getExpoPushTokenAsync","token","data","exports","sendPushNotification","q","oonSnapshot","querySnapshot","root","event","ref","messages","child","once","then","snapshot","forEach","childSnapshot","expoToken","val","push","to","sound","body","all","fetch","method","headers","Accept","JSON","stringify","catch","reason","title","headerStyle","backgroundColor","border","headerShadowVisible","headerBackVisible","headerShown","exact"],"sources":["/Users/denisaolimpia/Desktop/E-H-eroes-/mobile-app/App.js"],"sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport SideMenu from './components/Menu';\nimport AddAnnouncement from './pages/AddAnnouncement';\nimport Announcement from './pages/Announcement';\nimport Announcements from './pages/Announcements';\nimport Donations from './pages/Donations';\nimport HomeScreen from './pages/Home';\nimport Login from './pages/Login';\nimport Appoitment from './pages/process/Appoitment';\nimport Form1 from './pages/process/Form1';\nimport Form2 from './pages/process/Form2';\nimport Form3 from './pages/process/Form3';\nimport Form4 from './pages/process/Form4';\nimport Form5 from './pages/process/Form5';\nimport Form6 from './pages/process/Form6';\nimport Register from './pages/Register';\nimport Start from './pages/Start';\nimport {\n  AuthenticatedUserContext,\n  AuthenticatedUserProvider,\n} from './providers';\nimport * as Notifications from 'expo-notifications';\nimport { Platform } from 'react-native';\nimport Constants from 'expo-constants';\nimport { db } from './utils/firebase';\nimport { collection, doc, onSnapshot, query } from 'firebase/firestore/lite';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  const [appIsReady, setAppIsReady] = useState(false);\n  const { user } = useContext(AuthenticatedUserContext);\n\n  const customFonts = {\n    Fraunces_SemiBold: require('./assets/fonts/Fraunces-SemiBold.ttf'),\n    Fraunces_Bold: require('./assets/fonts/Fraunces-Bold.ttf'),\n    Outfit_Regular: require('./assets/fonts/Outfit-Regular.ttf'),\n    Outfit_Medium: require('./assets/fonts/Outfit-Medium.ttf'),\n    Outfit_SemiBold: require('./assets/fonts/Outfit-SemiBold.ttf'),\n    Outfit_Bold: require('./assets/fonts/Outfit-Bold.ttf'),\n  };\n\n  useEffect(() => {\n    async function prepare() {\n      try {\n        // Keep the splash screen visible while we fetch resources\n        await SplashScreen.preventAutoHideAsync();\n        // Pre-load fonts, make any API calls you need to do here\n        await Font.loadAsync(customFonts);\n        // Artificially delay for two seconds to simulate a slow loading\n        // experience. Please remove this if you copy and paste the code!\n        await new Promise((resolve) => setTimeout(resolve, 500));\n      } catch (e) {\n        console.warn(e);\n      } finally {\n        // Tell the application to render\n        setAppIsReady(true);\n      }\n    }\n    prepare();\n  }, [customFonts]);\n\n  console.ignoreAllLogs = true;\n\n  Notifications.setNotificationHandler({\n    handleNotification: async () => ({\n      shouldShowAlert: true,\n      shouldPlaySound: true,\n      shouldSetBadge: true,\n    }),\n  });\n\n  async function registerForPushNotificationsAsync() {\n    let token;\n    if (Constants.isDevice) {\n      const { status: existingStatus } =\n        await Notifications.getPermissionsAsync();\n      let finalStatus = existingStatus;\n      if (existingStatus !== 'granted') {\n        const { status } = await Notifications.requestPermissionsAsync();\n        finalStatus = status;\n        console.log('existingStatus', existingStatus);\n      }\n      if (finalStatus !== 'granted') {\n        alert('Failed to get push token for push notification!');\n        console.log('finalStatus', finalStatus);\n        return;\n      }\n      token = (await Notifications.getExpoPushTokenAsync()).data;\n    } else {\n      alert('Must use physical device for Push Notifications');\n    }\n\n    return token;\n  }\n\n  //send the push notification\n  exports.sendPushNotification = () => {\n    const q = query(collection(db, 'cities'));\n\n    oonSnapshot(q, (querySnapshot) => {\n      const root = event.data.ref.root;\n      var messages = [];\n\n      //return the main promise\n      return root\n        .child('/users')\n        .once('value')\n        .then(function (snapshot) {\n          snapshot.forEach(function (childSnapshot) {\n            var expoToken = childSnapshot.val().expoToken;\n\n            messages.push({\n              to: expoToken,\n              sound: 'default',\n              body: 'New Note Added',\n            });\n          });\n          //firebase.database then() respved a single promise that resolves\n          //once all the messages have been resolved\n          return Promise.all(messages);\n        })\n        .then((messages) => {\n          // console.log(messages)\n          fetch('https://exp.host/--/api/v2/push/send', {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(messages),\n          });\n        })\n        .catch((reason) => {\n          console.log(reason);\n        });\n    });\n  };\n\n  if (!appIsReady) {\n    return null;\n  }\n  return (\n    <AuthenticatedUserProvider>\n      <NavigationContainer>\n        <Stack.Navigator initialRouteName={user ? 'Donations' : 'Donations'}>\n          <Stack.Screen name='Home' component={HomeScreen} />\n          <Stack.Screen\n            name='Announcements'\n            component={Announcements}\n            options={{\n              title: '',\n              headerStyle: {\n                backgroundColor: '#ffffff',\n                border: 'none',\n              },\n              headerShadowVisible: false, // applied here\n              headerBackVisible: false,\n              headerShown: false,\n              exact: true,\n            }}\n          />\n          <Stack.Screen\n            name='AddAnnouncement'\n            component={AddAnnouncement}\n            options={{\n              title: '',\n              headerStyle: {\n                backgroundColor: '#ffffff',\n                border: 'none',\n              },\n              headerShadowVisible: false, // applied here\n              //   headerBackVisible: false,\n              // headerShown: false,\n            }}\n          />\n          <Stack.Screen\n            name='Donations'\n            component={Donations}\n            options={{\n              title: '',\n              headerStyle: {\n                backgroundColor: '#ffffff',\n                border: 'none',\n              },\n              headerShadowVisible: false, // applied here\n              headerBackVisible: false,\n              headerShown: false,\n            }}\n          />\n          <Stack.Screen\n            name='Appointment'\n            component={Appoitment}\n            options={{\n              title: '',\n              headerStyle: {\n                backgroundColor: '#ffffff',\n                border: 'none',\n              },\n              headerBackVisible: true,\n              headerShadowVisible: false, // applied here\n            }}\n          />\n          <Stack.Screen\n            name='Announcement'\n            component={Announcement}\n            options={{\n              title: '',\n              headerStyle: {\n                backgroundColor: '#ffffff',\n                border: 'none',\n              },\n              exact: true,\n              headerShadowVisible: false, // applied here\n            }}\n          />\n          <Stack.Screen\n            name='Form1'\n            component={Form1}\n            options={{\n              title: '',\n              headerStyle: {\n                backgroundColor: '#ffffff',\n                border: 'none',\n              },\n              headerShadowVisible: false, // applied here\n            }}\n          />\n          <Stack.Screen\n            name='Form2'\n            component={Form2}\n            options={{\n              title: '',\n              headerStyle: {\n                backgroundColor: '#ffffff',\n                border: 'none',\n              },\n              headerShadowVisible: false, // applied here\n            }}\n          />\n          <Stack.Screen\n            name='Form3'\n            component={Form3}\n            options={{\n              title: '',\n              headerStyle: {\n                backgroundColor: '#ffffff',\n                border: 'none',\n              },\n              headerShadowVisible: false, // applied here\n            }}\n          />\n          <Stack.Screen\n            name='Form4'\n            component={Form4}\n            options={{\n              title: '',\n              headerStyle: {\n                backgroundColor: '#ffffff',\n                border: 'none',\n              },\n              headerShadowVisible: false, // applied here\n            }}\n          />\n          <Stack.Screen\n            name='Form5'\n            component={Form5}\n            options={{\n              title: '',\n              headerStyle: {\n                backgroundColor: '#ffffff',\n                border: 'none',\n              },\n              headerShadowVisible: false, // applied here\n            }}\n          />\n          <Stack.Screen\n            name='Form6'\n            component={Form6}\n            options={{\n              title: '',\n              headerStyle: {\n                backgroundColor: '#ffffff',\n                border: 'none',\n              },\n              headerShadowVisible: false, // applied here\n            }}\n          />\n          <Stack.Screen\n            name='Start'\n            component={Start}\n            options={{\n              title: '',\n              headerStyle: {\n                backgroundColor: '#ffffff',\n                border: 'none',\n              },\n              headerShadowVisible: false, // applied here\n              headerShown: false,\n            }}\n          />\n          <Stack.Screen\n            name='Register'\n            component={Register}\n            options={{\n              title: '',\n              headerStyle: {\n                backgroundColor: '#ffffff',\n                border: 'none',\n              },\n              headerShadowVisible: false, // applied here\n            }}\n          />\n          <Stack.Screen\n            name='Login'\n            component={Login}\n            options={{\n              title: '',\n              headerStyle: {\n                backgroundColor: '#ffffff',\n                border: 'none',\n              },\n              headerShadowVisible: false, // applied here\n            }}\n          />\n          <Stack.Screen\n            name='Menu'\n            component={SideMenu}\n            options={{\n              title: '',\n              headerStyle: {\n                backgroundColor: '#ffffff',\n                border: 'none',\n              },\n              headerShadowVisible: false, // applied here\n              headerBackVisible: false,\n              headerShown: false,\n            }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </AuthenticatedUserProvider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}