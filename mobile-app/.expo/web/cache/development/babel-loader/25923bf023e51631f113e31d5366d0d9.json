{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"placeholder\", \"label\", \"value\", \"changeValue\"];\nimport React, { useState } from 'react';\nimport theme, { colors } from \"../style.js\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CalendarInput = function CalendarInput(_ref) {\n  var placeholder = _ref.placeholder,\n      label = _ref.label,\n      value = _ref.value,\n      changeValue = _ref.changeValue,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isPickerShow = _useState2[0],\n      setIsPickerShow = _useState2[1];\n\n  var _useState3 = useState(new Date(Date.now())),\n      _useState4 = _slicedToArray(_useState3, 2),\n      date = _useState4[0],\n      setDate = _useState4[1];\n\n  var showPicker = function showPicker() {\n    setIsPickerShow(true);\n  };\n\n  var onChange = function onChange(event, value) {\n    setDate(value);\n\n    if (Platform.OS === 'android') {\n      setIsPickerShow(false);\n    }\n  };\n\n  return _jsxs(View, {\n    style: styles.Container,\n    children: [_jsxs(Text, {\n      style: [styles.Label, theme.Base],\n      children: [\" \", label]\n    }), _jsx(DateTimePicker, {\n      value: date,\n      mode: \"datetime\",\n      is24Hour: true,\n      onChange: onChange,\n      style: styles.datePicker\n    })]\n  });\n};\n\nexport default CalendarInput;\nvar styles = StyleSheet.create({\n  Container: {\n    width: '90%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    borderBottomColor: '#C6C6C8',\n    borderBottomWidth: 1\n  },\n  Label: {\n    opacity: 0.5,\n    width: '30%'\n  },\n  Input: {\n    height: 40,\n    margin: 12,\n    padding: 10\n  },\n  pickedDateContainer: {\n    padding: 20,\n    backgroundColor: colors.orange,\n    borderRadius: 10,\n    color: 'black'\n  },\n  pickedDate: {\n    fontSize: 18,\n    color: 'black'\n  },\n  btnContainer: {\n    padding: 30,\n    color: 'black'\n  },\n  datePicker: {\n    width: 320,\n    height: 260,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    color: 'black'\n  }\n});","map":{"version":3,"names":["React","useState","theme","colors","DateTimePicker","CalendarInput","placeholder","label","value","changeValue","props","isPickerShow","setIsPickerShow","Date","now","date","setDate","showPicker","onChange","event","Platform","OS","styles","Container","Label","Base","datePicker","StyleSheet","create","width","display","flexDirection","justifyContent","alignItems","borderBottomColor","borderBottomWidth","opacity","Input","height","margin","padding","pickedDateContainer","backgroundColor","orange","borderRadius","color","pickedDate","fontSize","btnContainer"],"sources":["/Users/denisaolimpia/Desktop/E-H-eroes-/mobile-app/components/CalendarInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport theme, { colors } from '../style.js';\nimport {\n  StyleSheet,\n  TextInput,\n  Text,\n  View,\n  ImageBackground,\n} from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nconst CalendarInput = ({\n  placeholder,\n  label,\n  value,\n  changeValue,\n  ...props\n}) => {\n  const [isPickerShow, setIsPickerShow] = useState(false);\n  const [date, setDate] = useState(new Date(Date.now()));\n\n  const showPicker = () => {\n    setIsPickerShow(true);\n  };\n\n  const onChange = (event, value) => {\n    setDate(value);\n    if (Platform.OS === 'android') {\n      setIsPickerShow(false);\n    }\n  };\n  return (\n    <View style={styles.Container}>\n      <Text style={[styles.Label, theme.Base]}> {label}</Text>\n      <DateTimePicker\n        value={date}\n        mode='datetime'\n        is24Hour={true}\n        onChange={onChange}\n        style={styles.datePicker}\n      />\n    </View>\n  );\n};\nexport default CalendarInput;\nconst styles = StyleSheet.create({\n  Container: {\n    width: '90%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    borderBottomColor: '#C6C6C8',\n    borderBottomWidth: 1,\n  },\n  Label: {\n    opacity: 0.5,\n    width: '30%',\n  },\n  Input: {\n    height: 40,\n    margin: 12,\n    padding: 10,\n  },\n  pickedDateContainer: {\n    padding: 20,\n    backgroundColor: colors.orange,\n    borderRadius: 10,\n    color: 'black',\n  },\n  pickedDate: {\n    fontSize: 18,\n    color: 'black',\n  },\n  btnContainer: {\n    padding: 30,\n    color: 'black',\n  },\n  // This only works on iOS\n  datePicker: {\n    width: 320,\n    height: 260,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    color: 'black',\n  },\n});\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,IAAgBC,MAAhB;;;;;;AAQA,OAAOC,cAAP,MAA2B,wCAA3B;;;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAMhB;EAAA,IALJC,WAKI,QALJA,WAKI;EAAA,IAJJC,KAII,QAJJA,KAII;EAAA,IAHJC,KAGI,QAHJA,KAGI;EAAA,IAFJC,WAEI,QAFJA,WAEI;EAAA,IADDC,KACC;;EACJ,gBAAwCT,QAAQ,CAAC,KAAD,CAAhD;EAAA;EAAA,IAAOU,YAAP;EAAA,IAAqBC,eAArB;;EACA,iBAAwBX,QAAQ,CAAC,IAAIY,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAAD,CAAhC;EAAA;EAAA,IAAOC,IAAP;EAAA,IAAaC,OAAb;;EAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;IACvBL,eAAe,CAAC,IAAD,CAAf;EACD,CAFD;;EAIA,IAAMM,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQX,KAAR,EAAkB;IACjCQ,OAAO,CAACR,KAAD,CAAP;;IACA,IAAIY,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;MAC7BT,eAAe,CAAC,KAAD,CAAf;IACD;EACF,CALD;;EAMA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEU,MAAM,CAACC,SAApB;IAAA,WACE,MAAC,IAAD;MAAM,KAAK,EAAE,CAACD,MAAM,CAACE,KAAR,EAAetB,KAAK,CAACuB,IAArB,CAAb;MAAA,gBAA2ClB,KAA3C;IAAA,EADF,EAEE,KAAC,cAAD;MACE,KAAK,EAAEQ,IADT;MAEE,IAAI,EAAC,UAFP;MAGE,QAAQ,EAAE,IAHZ;MAIE,QAAQ,EAAEG,QAJZ;MAKE,KAAK,EAAEI,MAAM,CAACI;IALhB,EAFF;EAAA,EADF;AAYD,CAhCD;;AAiCA,eAAerB,aAAf;AACA,IAAMiB,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC/BL,SAAS,EAAE;IACTM,KAAK,EAAE,KADE;IAETC,OAAO,EAAE,MAFA;IAGTC,aAAa,EAAE,KAHN;IAITC,cAAc,EAAE,YAJP;IAKTC,UAAU,EAAE,QALH;IAMTC,iBAAiB,EAAE,SANV;IAOTC,iBAAiB,EAAE;EAPV,CADoB;EAU/BX,KAAK,EAAE;IACLY,OAAO,EAAE,GADJ;IAELP,KAAK,EAAE;EAFF,CAVwB;EAc/BQ,KAAK,EAAE;IACLC,MAAM,EAAE,EADH;IAELC,MAAM,EAAE,EAFH;IAGLC,OAAO,EAAE;EAHJ,CAdwB;EAmB/BC,mBAAmB,EAAE;IACnBD,OAAO,EAAE,EADU;IAEnBE,eAAe,EAAEvC,MAAM,CAACwC,MAFL;IAGnBC,YAAY,EAAE,EAHK;IAInBC,KAAK,EAAE;EAJY,CAnBU;EAyB/BC,UAAU,EAAE;IACVC,QAAQ,EAAE,EADA;IAEVF,KAAK,EAAE;EAFG,CAzBmB;EA6B/BG,YAAY,EAAE;IACZR,OAAO,EAAE,EADG;IAEZK,KAAK,EAAE;EAFK,CA7BiB;EAkC/BnB,UAAU,EAAE;IACVG,KAAK,EAAE,GADG;IAEVS,MAAM,EAAE,GAFE;IAGVR,OAAO,EAAE,MAHC;IAIVE,cAAc,EAAE,QAJN;IAKVC,UAAU,EAAE,YALF;IAMVY,KAAK,EAAE;EANG;AAlCmB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}