{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { isBoolean, isFunction, isObject, isUndefined } from '@react-native-firebase/app/lib/common';\nimport FirestoreDocumentChange from \"./FirestoreDocumentChange\";\nimport FirestoreDocumentSnapshot from \"./FirestoreDocumentSnapshot\";\nimport FirestoreSnapshotMetadata from \"./FirestoreSnapshotMetadata\";\n\nvar FirestoreQuerySnapshot = function () {\n  function FirestoreQuerySnapshot(firestore, query, nativeData) {\n    _classCallCheck(this, FirestoreQuerySnapshot);\n\n    this._query = query;\n    this._source = nativeData.source;\n    this._excludesMetadataChanges = nativeData.excludesMetadataChanges;\n    this._changes = nativeData.changes.map(function ($) {\n      return new FirestoreDocumentChange(firestore, $);\n    });\n    this._docs = nativeData.documents.map(function ($) {\n      return new FirestoreDocumentSnapshot(firestore, $);\n    });\n    this._metadata = new FirestoreSnapshotMetadata(nativeData.metadata);\n  }\n\n  _createClass(FirestoreQuerySnapshot, [{\n    key: \"docs\",\n    get: function get() {\n      return this._docs;\n    }\n  }, {\n    key: \"empty\",\n    get: function get() {\n      return this._docs.length === 0;\n    }\n  }, {\n    key: \"metadata\",\n    get: function get() {\n      return this._metadata;\n    }\n  }, {\n    key: \"query\",\n    get: function get() {\n      return this._query;\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this._docs.length;\n    }\n  }, {\n    key: \"docChanges\",\n    value: function docChanges(options) {\n      if (!isUndefined(options) && !isObject(options)) {\n        throw new Error(\"firebase.firestore() QuerySnapshot.docChanges(*) 'options' expected an object.\");\n      }\n\n      var includeMetaDataChanges = false;\n\n      if (options) {\n        if (!isBoolean(options.includeMetadataChanges)) {\n          throw new Error(\"firebase.firestore() QuerySnapshot.docChanges(*) 'options.includeMetadataChanges' expected a boolean.\");\n        }\n\n        includeMetaDataChanges = options.includeMetadataChanges;\n      }\n\n      if (this._source === 'get') {\n        return this._changes;\n      }\n\n      if (includeMetaDataChanges && this._excludesMetadataChanges) {\n        throw new Error('firebase.firestore() QuerySnapshot.docChanges() To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().');\n      }\n\n      return this._changes.filter(function ($) {\n        if (!includeMetaDataChanges) {\n          return $._isMetadataChange === false;\n        }\n\n        return true;\n      });\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback, thisArg) {\n      if (!isFunction(callback)) {\n        throw new Error(\"firebase.firestore() QuerySnapshot.forEach(*) 'callback' expected a function.\");\n      }\n\n      var cb = thisArg ? callback.bind(thisArg) : callback;\n\n      for (var i = 0; i < this._docs.length; i++) {\n        cb(this._docs[i], i);\n      }\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(other) {\n      if (!(other instanceof FirestoreQuerySnapshot)) {\n        throw new Error(\"firebase.firestore() QuerySnapshot.isEqual(*) 'other' expected a QuerySnapshot instance.\");\n      }\n\n      if (this.empty !== other.empty || this.size !== other.size || !this.metadata.isEqual(other.metadata)) {\n        return false;\n      }\n\n      for (var i = 0; i < this.docs.length; i++) {\n        var thisDoc = this.docs[i];\n        var otherDoc = other.docs[i];\n\n        if (!thisDoc.isEqual(otherDoc)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }]);\n\n  return FirestoreQuerySnapshot;\n}();\n\nexport { FirestoreQuerySnapshot as default };","map":{"version":3,"names":["isBoolean","isFunction","isObject","isUndefined","FirestoreDocumentChange","FirestoreDocumentSnapshot","FirestoreSnapshotMetadata","FirestoreQuerySnapshot","firestore","query","nativeData","_query","_source","source","_excludesMetadataChanges","excludesMetadataChanges","_changes","changes","map","$","_docs","documents","_metadata","metadata","length","options","Error","includeMetaDataChanges","includeMetadataChanges","filter","_isMetadataChange","callback","thisArg","cb","bind","i","other","empty","size","isEqual","docs","thisDoc","otherDoc"],"sources":["/Users/denisaolimpia/Desktop/E-H-eroes-/mobile-app/node_modules/@react-native-firebase/firestore/lib/FirestoreQuerySnapshot.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  isBoolean,\n  isFunction,\n  isObject,\n  isUndefined,\n} from '@react-native-firebase/app/lib/common';\nimport FirestoreDocumentChange from './FirestoreDocumentChange';\nimport FirestoreDocumentSnapshot from './FirestoreDocumentSnapshot';\nimport FirestoreSnapshotMetadata from './FirestoreSnapshotMetadata';\n\nexport default class FirestoreQuerySnapshot {\n  constructor(firestore, query, nativeData) {\n    this._query = query;\n    this._source = nativeData.source;\n    this._excludesMetadataChanges = nativeData.excludesMetadataChanges;\n    this._changes = nativeData.changes.map($ => new FirestoreDocumentChange(firestore, $));\n    this._docs = nativeData.documents.map($ => new FirestoreDocumentSnapshot(firestore, $));\n    this._metadata = new FirestoreSnapshotMetadata(nativeData.metadata);\n  }\n\n  get docs() {\n    return this._docs;\n  }\n\n  get empty() {\n    return this._docs.length === 0;\n  }\n\n  get metadata() {\n    return this._metadata;\n  }\n\n  get query() {\n    return this._query;\n  }\n\n  get size() {\n    return this._docs.length;\n  }\n\n  docChanges(options) {\n    if (!isUndefined(options) && !isObject(options)) {\n      throw new Error(\n        \"firebase.firestore() QuerySnapshot.docChanges(*) 'options' expected an object.\",\n      );\n    }\n\n    let includeMetaDataChanges = false;\n\n    if (options) {\n      if (!isBoolean(options.includeMetadataChanges)) {\n        throw new Error(\n          \"firebase.firestore() QuerySnapshot.docChanges(*) 'options.includeMetadataChanges' expected a boolean.\",\n        );\n      }\n\n      includeMetaDataChanges = options.includeMetadataChanges;\n    }\n\n    // A get query should always return the document changes from native\n    if (this._source === 'get') {\n      return this._changes;\n    }\n\n    if (includeMetaDataChanges && this._excludesMetadataChanges) {\n      throw new Error(\n        'firebase.firestore() QuerySnapshot.docChanges() To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().',\n      );\n    }\n\n    return this._changes.filter($ => {\n      // Remove all changes that have come from metadata changes list\n      if (!includeMetaDataChanges) {\n        return $._isMetadataChange === false;\n      }\n\n      return true;\n    });\n  }\n\n  forEach(callback, thisArg) {\n    if (!isFunction(callback)) {\n      throw new Error(\n        \"firebase.firestore() QuerySnapshot.forEach(*) 'callback' expected a function.\",\n      );\n    }\n\n    const cb = thisArg ? callback.bind(thisArg) : callback;\n\n    for (let i = 0; i < this._docs.length; i++) {\n      cb(this._docs[i], i);\n    }\n  }\n\n  isEqual(other) {\n    if (!(other instanceof FirestoreQuerySnapshot)) {\n      throw new Error(\n        \"firebase.firestore() QuerySnapshot.isEqual(*) 'other' expected a QuerySnapshot instance.\",\n      );\n    }\n\n    // Simple checks first\n    if (\n      this.empty !== other.empty ||\n      this.size !== other.size ||\n      !this.metadata.isEqual(other.metadata)\n    ) {\n      return false;\n    }\n\n    // Expensive check\n    // Each doc must be in order & have the same data\n    for (let i = 0; i < this.docs.length; i++) {\n      const thisDoc = this.docs[i];\n      const otherDoc = other.docs[i];\n\n      if (!thisDoc.isEqual(otherDoc)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}