{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { isFinite, isNumber, isUndefined } from '@react-native-firebase/app/lib/common';\n\nvar FirestoreGeoPoint = function () {\n  function FirestoreGeoPoint(latitude, longitude) {\n    _classCallCheck(this, FirestoreGeoPoint);\n\n    if (isUndefined(latitude) || isUndefined(longitude)) {\n      throw new Error('firebase.firestore.GeoPoint constructor expected latitude and longitude values.');\n    }\n\n    if (!isNumber(latitude)) {\n      throw new Error(\"firebase.firestore.GeoPoint 'latitude' must be a number value.\");\n    }\n\n    if (!isNumber(longitude)) {\n      throw new Error(\"firebase.firestore.GeoPoint 'longitude' must be a number value.\");\n    }\n\n    if (!isFinite(latitude) || latitude < -90 || latitude > 90) {\n      throw new Error(\"firebase.firestore.GeoPoint 'latitude' must be a number between -90 and 90, but was: \" + latitude + \".\");\n    }\n\n    if (!isFinite(longitude) || longitude < -180 || longitude > 180) {\n      throw new Error(\"firebase.firestore.GeoPoint 'longitude' must be a number between -180 and 180, but was: \" + longitude + \".\");\n    }\n\n    this._latitude = latitude;\n    this._longitude = longitude;\n  }\n\n  _createClass(FirestoreGeoPoint, [{\n    key: \"latitude\",\n    get: function get() {\n      return this._latitude;\n    }\n  }, {\n    key: \"longitude\",\n    get: function get() {\n      return this._longitude;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(other) {\n      if (!(other instanceof FirestoreGeoPoint)) {\n        throw new Error(\"firebase.firestore.GeoPoint.isEqual(*) 'other' expected an instance of GeoPoint.\");\n      }\n\n      return this._latitude === other._latitude && this._longitude === other._longitude;\n    }\n  }]);\n\n  return FirestoreGeoPoint;\n}();\n\nexport { FirestoreGeoPoint as default };","map":{"version":3,"names":["isFinite","isNumber","isUndefined","FirestoreGeoPoint","latitude","longitude","Error","_latitude","_longitude","other"],"sources":["/Users/denisaolimpia/Desktop/E-H-eroes-/mobile-app/node_modules/@react-native-firebase/firestore/lib/FirestoreGeoPoint.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isFinite, isNumber, isUndefined } from '@react-native-firebase/app/lib/common';\n\nexport default class FirestoreGeoPoint {\n  constructor(latitude, longitude) {\n    if (isUndefined(latitude) || isUndefined(longitude)) {\n      throw new Error(\n        'firebase.firestore.GeoPoint constructor expected latitude and longitude values.',\n      );\n    }\n\n    if (!isNumber(latitude)) {\n      throw new Error(\"firebase.firestore.GeoPoint 'latitude' must be a number value.\");\n    }\n\n    if (!isNumber(longitude)) {\n      throw new Error(\"firebase.firestore.GeoPoint 'longitude' must be a number value.\");\n    }\n\n    if (!isFinite(latitude) || latitude < -90 || latitude > 90) {\n      throw new Error(\n        `firebase.firestore.GeoPoint 'latitude' must be a number between -90 and 90, but was: ${latitude}.`,\n      );\n    }\n\n    if (!isFinite(longitude) || longitude < -180 || longitude > 180) {\n      throw new Error(\n        `firebase.firestore.GeoPoint 'longitude' must be a number between -180 and 180, but was: ${longitude}.`,\n      );\n    }\n\n    this._latitude = latitude;\n    this._longitude = longitude;\n  }\n\n  get latitude() {\n    return this._latitude;\n  }\n\n  get longitude() {\n    return this._longitude;\n  }\n\n  isEqual(other) {\n    if (!(other instanceof FirestoreGeoPoint)) {\n      throw new Error(\n        \"firebase.firestore.GeoPoint.isEqual(*) 'other' expected an instance of GeoPoint.\",\n      );\n    }\n\n    return this._latitude === other._latitude && this._longitude === other._longitude;\n  }\n}\n"],"mappings":";;AAiBA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,WAA7B,QAAgD,uCAAhD;;IAEqBC,iB;EACnB,2BAAYC,QAAZ,EAAsBC,SAAtB,EAAiC;IAAA;;IAC/B,IAAIH,WAAW,CAACE,QAAD,CAAX,IAAyBF,WAAW,CAACG,SAAD,CAAxC,EAAqD;MACnD,MAAM,IAAIC,KAAJ,CACJ,iFADI,CAAN;IAGD;;IAED,IAAI,CAACL,QAAQ,CAACG,QAAD,CAAb,EAAyB;MACvB,MAAM,IAAIE,KAAJ,CAAU,gEAAV,CAAN;IACD;;IAED,IAAI,CAACL,QAAQ,CAACI,SAAD,CAAb,EAA0B;MACxB,MAAM,IAAIC,KAAJ,CAAU,iEAAV,CAAN;IACD;;IAED,IAAI,CAACN,QAAQ,CAACI,QAAD,CAAT,IAAuBA,QAAQ,GAAG,CAAC,EAAnC,IAAyCA,QAAQ,GAAG,EAAxD,EAA4D;MAC1D,MAAM,IAAIE,KAAJ,2FACoFF,QADpF,OAAN;IAGD;;IAED,IAAI,CAACJ,QAAQ,CAACK,SAAD,CAAT,IAAwBA,SAAS,GAAG,CAAC,GAArC,IAA4CA,SAAS,GAAG,GAA5D,EAAiE;MAC/D,MAAM,IAAIC,KAAJ,8FACuFD,SADvF,OAAN;IAGD;;IAED,KAAKE,SAAL,GAAiBH,QAAjB;IACA,KAAKI,UAAL,GAAkBH,SAAlB;EACD;;;;SAED,eAAe;MACb,OAAO,KAAKE,SAAZ;IACD;;;SAED,eAAgB;MACd,OAAO,KAAKC,UAAZ;IACD;;;WAED,iBAAQC,KAAR,EAAe;MACb,IAAI,EAAEA,KAAK,YAAYN,iBAAnB,CAAJ,EAA2C;QACzC,MAAM,IAAIG,KAAJ,CACJ,kFADI,CAAN;MAGD;;MAED,OAAO,KAAKC,SAAL,KAAmBE,KAAK,CAACF,SAAzB,IAAsC,KAAKC,UAAL,KAAoBC,KAAK,CAACD,UAAvE;IACD;;;;;;SAhDkBL,iB"},"metadata":{},"sourceType":"module"}